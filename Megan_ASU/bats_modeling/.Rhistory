library(dismo)
install.packages("dismo")
library(dismo)
system.file(("java",package="dismo"))
system.file("java", package="dismo")
?maxent
fnames <- list.files(path=paste(system.file(package="dismo"), '/ex', sep=''),
pattern='grd', full.names=TRUE )
plot(predictors)
predictors <- stack(fnames)
plot(predictors)
occurence <- paste(system.file(package="dismo"), '/ex/bradypus.csv', sep='')
occ <- read.table(occurence, header=TRUE, sep=',')[,-1]
head(occ)
fold <- kfold(occ, k=5)
occtest <- occ[fold == 1, ]
occtrain <- occ[fold != 1, ]
me <- maxent(predictors, occtrain, factors='biome')
plot(me)
response(me)
r <- predict(me, predictors)
plot(r)
points(occ)
bg <- randomPoints(predictors, 1000)
e1 <- evaluate(me, p=occtest, a=bg, x=predictors)
pvtest <- data.frame(extract(predictors, occtest))
avtest <- data.frame(extract(predictors, bg))
e2 <- evaluate(me, p=pvtest, a=avtest)
testp <- predict(me, pvtest)
head(testp)
testa <- predict(me, avtest)
e3 <- evaluate(p=testp, a=testa)
e3
threshold(e3)
plot(e3, 'ROC')
}
plot(me)
plot(r)
plot(predictors)
plot(predictors)
paste(system.file(package="dismo"), '/ex', sep='')
vignette('sdm',dismo)
vignette('sdm','dismo')
head(fold,20)
head(occtrain)
?maxent
plot(predictors)
me <- maxent(predictors, occtrain, factors='biome') # catious: biome is a factor
plot(me)
me
plot(predictors)
getwd()
library(raster)
lulc <- raster('/data/lulc.tif')
lulc <- raster('./data/lulc.tif')
plot(lulc)
?raster
vignette('raster','raster')
?raster
dat2013 <- read.csv('./data/2013Foraging.csv')
getwd()
dat2013 <- read.csv('./data/2013Foraging.csv')
View(dat2013)
head(dat2013)
?format
x <- dat2013$x[1]
x
format(x, digits=2, nsmall=2)
format(13.7, nsmall = 3)
dat2013$lat <- dat2013$x/10000
View(dat2013)
dat2013$lat <- dat2013$x/100000
dat2013$long <- -dat2013$y/100000
dat2013$lat <- dat2013$x/10000
dat2013$long <- -dat2013$y/100000
plot(lulc)
dat2013 <- read.csv('./data/2013Foraging.csv')
head(dat2013)
dat2013 <- dat2013[,c("x","y")]
head(dat2013)
summary(dat2013)
names(dat2013) <- c("lat","long")
dim(dat2013)
summary(dat2013)
head(occ)
dat2013 <- read.csv('./data/2013Foraging.csv')
dat2013 <- dat2013[,c("x","y")]
names(dat2013) <- c("lon","lat")
head(dat2013)
fold <- kfold(dat2013, k=5)
occtest <- dat2013[fold == 1, ]
occtrain <- dat2013[fold != 1, ]
?maxent
me <- maxent(lulc, occtrain)
predictors <- raster('./data/lulc.tif')
summary(predictors)
predictors
me <- maxent(predictors, occtrain)
plot(predictors)
points(occtrain)
names(occtrain)
names(predictors)
predictors <- stack(fnames) # refer http://www.worldclim.org/bioclim for details about predictors
occurence <- paste(system.file(package="dismo"), '/ex/bradypus.csv', sep='')
occ <- read.table(occurence, header=TRUE, sep=',')[,-1]
fold <- kfold(occ, k=5)
occtest <- occ[fold == 1, ]
occtrain <- occ[fold != 1, ]
names(predictors)
names(occtrain)
system.file(package="dismo")
?list.files
fnames <- list.files(path="/Users/lianfeng/Desktop", pattern='grd', full.names=TRUE )
predictors <- stack(fnames) # refer http://www.worldclim.org/bioclim for details about predictors
plot(predictors)
me <- maxent(predictors, occtrain, factors='biome')
me
getwd()
fnames <- list.files(path="./data", pattern='tif', full.names=TRUE )
predictors <- stack(fnames) # refer http://www.worldclim.org/bioclim for details about predictors
fnames
fnames <- list.files(path="./data", pattern='.tif', full.names=TRUE )
fnames <- list.files(path="./data", pattern='lulc.tif', full.names=TRUE )
fnames <- list.files(path="./data", pattern='lulc.tif$', full.names=TRUE )
predictors <- stack(fnames) # refer http://www.worldclim.org/bioclim for details about predictors
plot(predictors)
me <- maxent(predictors, occtrain, factors="lulc")
predictors
plot(predictors)
points(occtrain)
dat2013 <- read.csv('./data/2013Foraging.csv')
dat2013 <- dat2013[,c("x","y")]
names(dat2013) <- c("lon","lat")
fold <- kfold(dat2013, k=5)
occtest <- dat2013[fold == 1, ]
occtrain <- dat2013[fold != 1, ]
plot(predictors)
points(occtrain)
me <- maxent(predictors, occtrain, factors="lulc")
me
plot(me)
response(me)
r <- predict(me, predictors)
plot(r)
points(occ)
occ <- dat2013[,c("x","y")]
dat2013 <- read.csv('./data/2013Foraging.csv')
occ <- dat2013[,c("x","y")]
names(occ) <- c("lon","lat")
fold <- kfold(occ, k=5)
occtest <- occ[fold == 1, ]
occtrain <- occ[fold != 1, ]
points(occ)
bg <- randomPoints(predictors, 1000)
e1 <- evaluate(me, p=occtest, a=bg, x=predictors)
plot(e3, 'ROC')
?maxent
x <- c("raster","dismo")
lapply(x,library,character.only= T)
?predict
plot(r)
points(occ)
bg <- randomPoints(predictors, 1000)
e1 <- evaluate(me, p=occtest, a=bg, x=predictors)
plot(e1, 'ROC')
?evaluate
testp <- predict(me, pvtest)
me <- maxent(predictors, occtrain, factors="lulc")
me
r <- predict(me, predictors)
pvtest <- data.frame(extract(predictors, occtest))
bg <- randomPoints(predictors, 1000)
pvtest <- data.frame(extract(predictors, occtest))
avtest <- data.frame(extract(predictors, bg))
testp <- predict(me, pvtest)
head(testp)
testa <- predict(me, avtest)
e3 <- evaluate(p=testp, a=testa)
e3
threshold(e3)
plot(e3, 'ROC')
plot(e1, 'ROC')
e2 <- evaluate(me, p=pvtest, a=avtest)
plot(e2, 'ROC')
plot(e1, 'ROC')
fnames <- list.files(path="./data", pattern='lulc.tif$', full.names=TRUE )
predictors <- stack(fnames)
predictors
dat2013 <- read.csv('./data/occurence2013.csv')
occ <- dat2013[,c("x","y")]
names(occ) <- c("lon","lat")
plot(predictors)
points(occtrain)
fold <- kfold(occ, k=5)
occtest <- occ[fold == 1, ]
occtrain <- occ[fold != 1, ]
me <- maxent(predictors, occtrain, factors="lulc")
me
r <- predict(me, predictors)
plot(r)
points(occ)
bg <- randomPoints(predictors, 1000)
e1 <- evaluate(me, p=occtest, a=bg, x=predictors)
plot(e1, 'ROC')
dat2014 <- read.csv('./data/occurence2014.csv')
occ <- dat2014[,c("x","y")]
names(occ) <- c("lon","lat")
head(dat2014)
unique(dat2014$name)
fn <- system.file("external/test.grd", package="raster")
s <- stack(fn, fn)
s
plot(s)
?rjava
??rjava
?update
lapply(x,library,character.only= T)
x <- c("raster","dismo")
lapply(x,library,character.only= T)
?maxent
predictors
me <- maxent(predictors, occtrain)
me
r <- predict(me, predictors)
bg <- randomPoints(predictors, 1000)
e1 <- evaluate(me, p=occtest, a=bg, x=predictors)
plot(e1, 'ROC')
fnames <- list.files(path=paste(system.file(package="dismo"), '/ex', sep=''),
pattern='grd', full.names=TRUE )
fnames <- list.files(path="/Users/lianfeng/Desktop", pattern='grd', full.names=TRUE )
predictors <- stack(fnames) # refer http://www.worldclim.org/bioclim for details about predictors
plot(predictors)
fnames <- list.files(path=paste(system.file(package="dismo"), '/ex', sep=''),
pattern='grd', full.names=TRUE )
predictors <- stack(fnames) # refer http://www.worldclim.org/bioclim for details about predictors
plot(predictors)
predictors[9]
predictors[8]
?stack
biome <-subset(predictors,9)
biome
biome <-subset(predictors,8)
biome
predictors <- stack(fnames) # refer http://www.worldclim.org/bioclim for details about predictors
plot(predictors)
occurence <- paste(system.file(package="dismo"), '/ex/bradypus.csv', sep='')
occ <- read.table(occurence, header=TRUE, sep=',')[,-1]
fold <- kfold(occ, k=5)
occtest <- occ[fold == 1, ]
occtrain <- occ[fold != 1, ]
?maxent
me2 <- maxent(predictors, occtrain, factors='biome', args=c("-J", "-P"))
me2
# This script constructs SDM for bats using 2013 occurence data and land classification data
x <- c("raster","dismo")
lapply(x,library,character.only= T)
# land classification as predictors
fnames <- list.files(path="./data", pattern='lulc.tif$', full.names=TRUE )
predictors <- stack(fnames)
predictors
# occurence data
dat2013 <- read.csv('./data/occurence2013.csv')
occ <- dat2013[,c("x","y")]
names(occ) <- c("lon","lat")
# plot sample data
plot(predictors)
points(occ)
# 20% sample for testing, the other 80% for training
fold <- kfold(occ, k=5)
occtest <- occ[fold == 1, ]
occtrain <- occ[fold != 1, ]
# fit model
me <- maxent(predictors, occtrain) #, factors="lulc"
me
me <- maxent(predictors, occtrain, factors="lulc") #
me
me <- maxent(predictors, occtrain, factors="lulc") #
me
r <- predict(me, predictors)
predictors
bg <- randomPoints(predictors, 1000)
e1 <- evaluate(me, p=occtest, a=bg, x=predictors)
plot(e1, 'ROC')
